<?php

namespace ContainerN9zFeK6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getProjectDescriptorBuilderService extends phpDocumentor_KernelProdContainer
{
    /*
     * Gets the private 'phpDocumentor\Descriptor\ProjectDescriptorBuilder' shared autowired service.
     *
     * @return \phpDocumentor\Descriptor\ProjectDescriptorBuilder
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/phpDocumentor/Descriptor/ProjectDescriptorBuilder.php';
        include_once \dirname(__DIR__, 4).'/src/phpDocumentor/Descriptor/Builder/AssemblerFactory.php';
        include_once \dirname(__DIR__, 5).'/reflection-docblock/src/DocBlock/ExampleFinder.php';
        include_once \dirname(__DIR__, 4).'/src/phpDocumentor/Descriptor/Filter/Filter.php';

        return $container->privates['phpDocumentor\\Descriptor\\ProjectDescriptorBuilder'] = new \phpDocumentor\Descriptor\ProjectDescriptorBuilder(\phpDocumentor\Descriptor\Builder\AssemblerFactory::createDefault(new \phpDocumentor\Reflection\DocBlock\ExampleFinder()), new \phpDocumentor\Descriptor\Filter\Filter(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['phpDocumentor\\Descriptor\\Filter\\StripIgnore'] ?? ($container->privates['phpDocumentor\\Descriptor\\Filter\\StripIgnore'] = new \phpDocumentor\Descriptor\Filter\StripIgnore()));
            yield 1 => ($container->privates['phpDocumentor\\Descriptor\\Filter\\StripIgnoredTags'] ?? ($container->privates['phpDocumentor\\Descriptor\\Filter\\StripIgnoredTags'] = new \phpDocumentor\Descriptor\Filter\StripIgnoredTags()));
            yield 2 => ($container->privates['phpDocumentor\\Descriptor\\Filter\\StripInternal'] ?? ($container->privates['phpDocumentor\\Descriptor\\Filter\\StripInternal'] = new \phpDocumentor\Descriptor\Filter\StripInternal()));
            yield 3 => ($container->privates['phpDocumentor\\Descriptor\\Filter\\StripOnVisibility'] ?? ($container->privates['phpDocumentor\\Descriptor\\Filter\\StripOnVisibility'] = new \phpDocumentor\Descriptor\Filter\StripOnVisibility()));
        }, 4)), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['phpDocumentor\\Transformer\\Writer\\Graph'] ?? $container->load('getGraphService'));
            yield 1 => ($container->privates['phpDocumentor\\Transformer\\Writer\\RenderGuide'] ?? $container->load('getRenderGuideService'));
        }, 2));
    }
}
